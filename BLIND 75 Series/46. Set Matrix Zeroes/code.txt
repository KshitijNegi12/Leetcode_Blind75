#include <bits/stdc++.h>
using namespace std;
    void markRow(vector<vector<int>> &matrix, int n, int m, int i) {
        for (int j = 1; j < m; j++) {
            matrix[i][j] = 0;
        }
    }


    void markCol(vector<vector<int>> &matrix, int n, int m, int j) {
        for (int i = 1; i < n; i++) {
                matrix[i][j] = 0;
        }
    }



vector<vector<int>> zeroMatrix(vector<vector<int>> &matrix, int n, int m) {
        int rows=0, cols=0;
        for(int i=0;i<n;i++){
            if(matrix[i][0]==0){
                rows=1;
                break;
            }
        }
        for(int i=0;i<m;i++){
            if(matrix[0][i]==0){
                cols=1;
                break;
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (matrix[i][j] == 0) {
                    matrix[i][0]=0;
                    matrix[0][j]=0;
                }
            }
        }
        
        // Updating values at columns
        for(int i=1;i<m;i++){
            if(matrix[0][i]==0){
                markCol(matrix,n,m,i);
            }
        }
        // Updating values at rows
        for(int i=1;i<n;i++){
            if(matrix[i][0]==0){
                markRow(matrix,n,m,i);
            }
        }
        
        if(rows){
            for(int i=0;i<n;i++){
                matrix[i][0]=0;
            }
        }
        if(cols){
            for(int i=0;i<m;i++){
                matrix[0][i]=0;
            }
        }
return matrix;
    }

int main()
{
    vector<vector<int>> matrix = {{1, 1, 1}, {1, 0, 1}, {1, 1, 1}};
    int n = matrix.size();
    int m = matrix[0].size();
    vector<vector<int>> ans = zeroMatrix(matrix, n, m);

    cout << "The Final matrix is: \n";
    for (auto it : ans) {
        for (auto ele : it) {
            cout << ele << " ";
        }
        cout << "\n";
    }
    return 0;
}