class MedianFinder {
public:
    priority_queue<int> left;
    priority_queue<int, vector<int>, greater<int> > right;
    
    MedianFinder() {
        
    }
    
    void addNum(int num) {
        if(right.empty() || right.top()<=num){
            right.push(num);
        }
        else{
            left.push(num);
        }
        
        if((int)right.size() - (int)left.size() >1){
            left.push(right.top());
            right.pop();
        }
        
        if(left.size()>right.size()){
            right.push(left.top());
            left.pop();
        }
    }
    
    double findMedian() {
        if(left.size() == right.size()) return (left.top()+right.top())/2.0;
        return right.top();
    }
};

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder* obj = new MedianFinder();
 * obj->addNum(num);
 * double param_2 = obj->findMedian();
 */