class Solution {
public:
    void DFS(vector<vector<char>>&grid, int i, int j, int m, int n, vector<vector<bool>> &vis){
        if(i<0 || j<0 || i>=m || j>=n || vis[i][j] || grid[i][j]=='0'){
            return;
        }
        vis[i][j]=true;
        DFS(grid,i+1,j,m,n,vis);
        DFS(grid,i,j+1,m,n,vis);
        DFS(grid,i-1,j,m,n,vis);
        DFS(grid,i,j-1,m,n,vis);

    }
    int numIslands(vector<vector<char>>& grid) {
        int res=0;
        int m=grid.size();
        int n=grid[0].size();
        vector<vector<bool>> vis(m,vector<bool>(n,false));
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]=='1' && !vis[i][j]){
                    res++;
                    DFS(grid,i,j,m,n,vis);
                }
            }
        }
        return res;
    }
};