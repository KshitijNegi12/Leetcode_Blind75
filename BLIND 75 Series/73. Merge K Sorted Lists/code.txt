class Solution {
public:
    class cmp{
        public:
        bool operator()(ListNode*a, ListNode*b){
            return a->val > b->val;
        }
    };
    
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        ListNode* res= new ListNode(-1), *last=res;
        priority_queue<ListNode*, vector<ListNode*>, cmp> pq;
        for(int i=0;i<lists.size();i++){
            if(lists[i]==nullptr) continue; // skip empty list
            pq.push(lists[i]);
        }
        while(!pq.empty()){
            ListNode* top=pq.top();
            pq.pop();
            last->next= top;
            last=last->next;
            top=top->next;
            if(top!=NULL){
                pq.push(top);
            }
        }
        return res->next;
    }
};