class Solution{
    public:
    int f( int ind, int prevInd, vector<int> &nums, vector<vector<int>> &dp)
    {
        // base case
        if( ind == nums.size()) return 0;
        if( dp[ind][prevInd + 1] != -1 ) return dp[ind][prevInd+1];
        int notPick = 0 + f( ind+1, prevInd, nums, dp);
        int pick = 0;
        if( prevInd == -1 || nums[ind] > nums[prevInd])
        {
            pick = 1 + f(ind+1, ind, nums, dp);
        }
        return dp[ind][prevInd+1] =  max( pick, notPick);
    }

    int lengthOfLIS(vector<int>& nums) {
        int n = nums.size();
        vector<vector<int>> dp( n, vector<int> (n+1, -1));
        return f( 0, -1, nums, dp);
    }
}