class Solution {
public:
    const string chars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

    unordered_map <string, string> urlDB, codeDB;

    string genCode()
    {
        string code = "";

        for( int i = 0; i < 5; i++)
        {
            code += chars[rand() % 62];
        }

        return "http://tinyurl.com/" + code;
    }
    // Encodes a URL to a shortened URL.
    string encode(string longUrl) {
        
        if( urlDB.find(longUrl) != urlDB.end()) return urlDB[longUrl];
        string code = genCode();

        while( codeDB.find(code) != codeDB.end())
        {
            code = genCode();
        }

        urlDB[longUrl] = code;
        codeDB[code] = longUrl;

        return code; 
    }

    // Decodes a shortened URL to its original URL.
    string decode(string shortUrl) {
        
        return codeDB[shortUrl];
    }
};