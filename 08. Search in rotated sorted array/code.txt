class Solution {
public:
    int search(vector<int>& nums, int target) {
        int low=0,high=nums.size()-1;
        while(low<=high){
            int mid=(low+high)/2;
            //is mid element = target element
            if(nums[mid]==target) return mid;
            //is our right side of the array sorted?
            if(nums[mid]<=nums[high]){
                //if our element lies on the right side
                if(target>=nums[mid]&& target<=nums[high]){
                    low=mid+1;
                }
                else{
                    high=mid-1;
                }
            }
            else{
                //if our element lies on the left side
                if(target<=nums[mid]&& target>=nums[low]){
                    high=mid-1;
                }
                else{
                    low=mid+1;
                }
            }
        }
        //element not found
        return -1;
    }
};